rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin can read/write all users
    match /users/{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Purchase Orders - all authenticated users can read, role-based write access
    match /purchaseOrders/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Purchase Team' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
      allow update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Manager' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Vendor' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // Gate Entries - Gate Security can create/update, all can read
    match /gateEntries/{document} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Gate Security' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // Samples - Sample Dept can create/update, all can read
    match /samples/{document} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Sample Dept' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // QC Results - QC Dept can create/update, all can read
    match /qcResults/{document} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'QC Dept' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // Weighbridge - Weighbridge Operator can create/update, all can read
    match /weighbridge/{document} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Weighbridge Operator' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // Unloading - Unloading Dept can create/update, all can read
    match /unloading/{document} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Unloading Dept' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // Accounts - Accounts Dept can create/update, all can read
    match /accounts/{document} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Accounts Dept' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
    }
    
    // Activity Logs - all authenticated users can read, role-based create
    match /activityLogs/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }
  }
}
